# Specify the parent image from which we build

###########################################
# Base image 
###########################################
FROM ubuntu:20.04 AS base

# Set the working directory
WORKDIR /app

# Copy source code to image
COPY --from=project . .

ENV DEBIAN_FRONTEND=noninteractive

# Install language
RUN apt-get update && apt-get install -y \
  locales \
  && locale-gen en_US.UTF-8 \
  && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
  && rm -rf /var/lib/apt/lists/*
ENV LANG en_US.UTF-8

# Install timezone
RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y tzdata \
  && dpkg-reconfigure --frontend noninteractive tzdata \
  && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get -y upgrade \
    && rm -rf /var/lib/apt/lists/*

# Install common programs
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    gnupg2 \
    lsb-release \
    sudo \
    software-properties-common \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install ROS2
RUN sudo add-apt-repository universe \
  && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null \
  && apt-get update && apt-get install -y --no-install-recommends \
    ros-foxy-ros-base \
    python3-argcomplete \
  && rm -rf /var/lib/apt/lists/*

ENV ROS_DISTRO=foxy
ENV AMENT_PREFIX_PATH=/opt/ros/foxy
ENV COLCON_PREFIX_PATH=/opt/ros/foxy
ENV LD_LIBRARY_PATH=/opt/ros/foxy/lib
ENV PATH=/opt/ros/foxy/bin:$PATH
ENV PYTHONPATH=/opt/ros/foxy/lib/python3.8/site-packages
ENV ROS_PYTHON_VERSION=3
ENV ROS_VERSION=2
ENV DEBIAN_FRONTEND=

###########################################
#  Develop image 
###########################################
FROM base AS dev

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
  bash-completion \
  build-essential \
  cmake \
  gdb \
  git \
  openssh-client \
  python3-argcomplete \
  python3-pip \
  ros-dev-tools \
  vim \
  && rm -rf /var/lib/apt/lists/*

RUN rosdep init || echo "rosdep already initialized"

ARG USERNAME=ros
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create a non-root user
RUN groupadd --gid $USER_GID $USERNAME \
  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
  # Add sudo support for the non-root user
  && apt-get update \
  && apt-get install -y sudo \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
  && chmod 0440 /etc/sudoers.d/$USERNAME \
  && rm -rf /var/lib/apt/lists/*

# Set up autocompletion for user
RUN apt-get update && apt-get install -y git-core bash-completion \
  && echo "if [ -f /opt/ros/${ROS_DISTRO}/setup.bash ]; then source /opt/ros/${ROS_DISTRO}/setup.bash; fi" >> /home/$USERNAME/.bashrc \
  && echo "if [ -f /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash ]; then source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash; fi" >> /home/$USERNAME/.bashrc \
  && rm -rf /var/lib/apt/lists/* 

ENV DEBIAN_FRONTEND=
ENV AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS=1



# Install required packages
RUN echo 'Installing requirements in image' &&\
    apt-get update &&\
    apt-get install -y ros-foxy-demo-nodes-cpp && \
    apt-get install -y libzmq5 \
    libzmq3-dev \
    libboost-dev \ 
    python3-pip \
    build-essential \
    cmake \
    sqlite3 \
    libsqlite3-dev \
    unzip \ 
    /app/ctrlx-datalayer-1.9.1.deb &&\
    chmod +x /app/bt_demo/bt_example.sh && \
    rm -rf /var/lib/apt/lists/* &&\
    rm /app/ctrlx-datalayer-1.9.1.deb &&\
    apt-get clean &&\
    apt-get autoclean &&\
    apt-get autoremove

LABEL description="ctrlX ros2_foxy integration with BehaviorTree_CPP"
LABEL maintainer="Mahdi Rezapour <https://github.com/mdirzpr>"


###########################################
#  Behavior Tree CPP library v3.8
###########################################


RUN echo "--- Installing BehaviorTree_CPP library ---" && \
    unzip BehaviorTree.CPP-3.8.zip && \
    cd /app/BehaviorTree.CPP-3.8 &&\
    mkdir build; cd build && \
    cmake .. && \
    make && \
    make install

RUN echo "--- Making the bt_demo example ---" && \
    cd /app/bt_demo &&\
    bash ./bt_example.sh


###########################################
#  Others !!!!!!
###########################################

# Set up auto-source of workspace for ros user
ARG WORKSPACE
RUN echo "source /opt/ros/foxy/setup.bash" >> ~/.bashrc

###########################################
#  Run the application
###########################################

CMD ["python3", "/app/main.py"]
